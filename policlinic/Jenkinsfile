pipeline {
    agent {
        label "Yuriy"
    }

    environment {
        MYSQLDATABASE = credentials('MYSQLDATABASE')
        MYSQLUSER = credentials('MYSQLUSER')
        MYSQLPASSWORD = credentials('MYSQLPASSWORD')
        MYSQLPASSWORDROOT = credentials('MYSQLPASSWORDROOT')
        SECRETKEYAPP = credentials('SECRETKEYAPP')
        DOCKERHUB = credentials('DockerHub')
    }

    stages {
        stage('Download Resources') {
            steps {
                script {
                    sh 'pwd'
                    sh 'rm -rf policlinic'

                    checkout([
                        $class: 'GitSCM',
                        branches: [[name: 'feature']],
                        doGenerateSubmoduleConfigurations: false,
                        extensions: [[$class: 'SubmoduleOption', recursiveSubmodules: true]],
                        userRemoteConfigs: [[url: 'https://github.com/qosimjon123/PolliClinic.git']]
                    ])

                }
            }
        }
        stage('Stop, Remove Images & Volumes') {
            steps {
                script {
                    sh 'docker-compose -f policlinic/docker-compose.yaml down --rmi all --volumes'
                }
            }
        }
        stage('Build') {
            steps {
                script {
                    sh 'pwd'
                    sh 'docker-compose -f policlinic/docker-compose.yaml build --no-cache'
                }
            }
        }
        stage('Push to DockerHub') {
            steps {
                script {
                    sh 'pwd'
                    // sh 'docker login -u $DOCKERHUB_USR -p $DOCKERHUB_PSW'
                    // sh 'docker tag policlinic_django noname12/policlinic:v2'
                    // sh 'docker push noname12/policlinic:v2'
                }
            }
        }
        stage('Run the server') {
            steps {
                script {
                    sh 'docker-compose -f policlinic/docker-compose.yaml up -d'
                }
            }
        }
        stage('Config') {
            steps {
                script {
                    sh './policlinic/docker_volumes/beckup_mysql.sh root $MYSQLPASSWORDROOT policlinic_db'
                    sh 'docker exec --tty policlinic_django_1 /bin/bash -c "pipenv run python manage.py test"'


                }
            }
        }
    }
}
